<?xml version="1.0" ?>
<robot name="atemr" xmlns:xacro="http://ros.org/wiki/xacro">
  <!-- Included files-->
  <xacro:include filename="$(find atemr_description)/urdf/wheels/traction_wheels_macro.urdf.xacro"/>
  <xacro:include filename="$(find atemr_description)/urdf/wheels/caster_wheel_macro.urdf.xacro"/>
  <xacro:include filename="$(find atemr_description)/urdf/extras/support_macro.urdf.xacro"/>
  <xacro:include filename="$(find atemr_description)/urdf/sensors/rplidar_macro.urdf.xacro"/>
  <xacro:include filename="$(find atemr_description)/urdf/sensors/irs_macro.urdf.xacro"/>
  <xacro:include filename="$(find atemr_description)/urdf/sensors/imu_macro.urdf.xacro"/>
  <xacro:include filename="$(find realsense2_description)/urdf/_d415.urdf.xacro" />

  <!-- Robot properties -->
  <xacro:property name="robot" value="" />
  <xacro:property name="camera_name" value="camera" />
  <!-- ############################CONFIG########################### -->
  <!-- BASE DIMENSIONS -->
  <!-- BASELINK PARAMS -->
  <xacro:property name="mass" value="3.0"/>
  <xacro:property name="base_link_origin">
    <origin rpy="0.0 0.0 0.0" xyz="-0.060 -0.002209 0.0405"/>
  </xacro:property>
  <!-- WHEELS PARAMS -->
  <xacro:property name="has_casters" value="1"/>
  <xacro:property name="wheel_c_x" value="-0.123589"/>
  <xacro:property name="wheel_c_y" value="0.0002"/>
  <xacro:property name="wheel_c_z" value="${-0.00199}"/>
  <xacro:property name="wheel_l_x" value="0.060"/>
  <xacro:property name="wheel_l_y" value="0.1589"/>
  <xacro:property name="wheel_l_z" value="0.0696"/>
  <xacro:property name="wheel_r_x" value="0.060"/>
  <xacro:property name="wheel_r_y" value="-0.1589"/>
  <xacro:property name="wheel_r_z" value="0.0696"/>
  <!-- EXTRAS PARAMS -->
  <xacro:property name="support_x" value="-0.08878"/>
  <xacro:property name="support_y" value="0.0"/>
  <xacro:property name="support_z" value="0.11584"/>
  <!-- SENSORS PARAMS -->
  <xacro:property name="rplidar_x" value="-0.00592"/>
  <xacro:property name="rplidar_y" value="0.0"/>
  <xacro:property name="rplidar_z" value="0.192"/>

  <xacro:arg name="use_nominal_extrinsics" default="true" />
  <xacro:arg name="add_plug" default="false" />
  <xacro:arg name="use_mesh" default="true" />
  <xacro:property name="rs_cam_x" value="0.1255"/>
  <xacro:property name="rs_cam_y" value="0.00131"/>
  <xacro:property name="rs_cam_z" value="0.07310"/>

  <xacro:property name="imu_x" value="${rplidar_x + 0.0257}"/> <!-- experimental value -->
  <xacro:property name="imu_y" value="${rplidar_y + 0.0065}"/> <!-- experimental value -->
  <xacro:property name="imu_z" value="0.1115"/> <!-- experimental value -->

  <!-- ############################ENDCONFIG########################### -->

  <link name="base_footprint"/>
  <!-- CHASIS -->
  <link name="base_link">
    <visual>
      <origin xyz="0 0 0" rpy="0.0 0.0 0.0"/>
      <geometry>
        <mesh filename="package://atemr_description/meshes/base.dae" scale="1 1 1"/>
      </geometry>
      <xacro:cyan_material/>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0.0 0.0 0.0"/>
      <geometry>
        <mesh filename="package://atemr_description/meshes/base_col.stl" scale="1 1 1"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="${mass}" />
      <origin xyz="0 0 0" rpy="0 0 0" />
      <!--inertia  ixx="0.02493951" ixy="-0.00019788" ixz="-0.000468106" iyy="0.021408522" iyz="0.000079357" izz="0.033811057" /-->
      <!--inertia  ixx="-0.048396" ixy="-0.411441" ixz="0.910151" iyy="-0.910064" iyz="-0.413155" izz="0.030477" /-->
      <inertia  ixx="0.0006826666666666668" ixy="0.0" ixz="0.0" iyy="0.0004166666666666667" iyz="0.0" izz="0.0" />
    </inertial>
  </link>
  <joint name="base_footprint_joint" type="fixed">
    <xacro:insert_block name="base_link_origin"/>
    <parent link="base_footprint"/>
    <child link="base_link"/>
  </joint>

  <link name="battery_pack">
    <visual>
      <origin xyz="0 0 0" rpy="0.0 0.0 0.0"/>
      <geometry>
        <mesh filename="package://atemr_description/meshes/battery.stl" scale="1 1 1"/>
      </geometry>
      <xacro:cyan_material/>
    </visual>
    <inertial>
      <mass value="1.4" />
      <origin xyz="0 0 0" rpy="0 0 0" />
      <!--inertia  ixx="0.002417057" ixy="0.0" ixz="0.0" iyy="0.002108361" iyz="0.0" izz="0.003385828" /-->
      <inertia  ixx="1.0" ixy="0.0" ixz="0.0" iyy="1.0" iyz="0.0" izz="1.0" />
    </inertial>
  </link>
  <joint name="battery_pack_joint" type="fixed">
    <origin xyz="-0.07282 0.0 0.06079" rpy="0 0 0" />
    <parent link="base_link"/>
    <child link="battery_pack"/>
  </joint>

  <!-- WHEELS -->
  <xacro:if value="${has_casters == 1}">
    <xacro:caster_wheel x="${wheel_c_x}" y="${wheel_c_y}" z="${wheel_c_z}" />
  </xacro:if>
  <xacro:traction_wheel prefix="left" x="${wheel_l_x}" y="${wheel_l_y}" z="${wheel_l_z}" />
  <xacro:traction_wheel prefix="right" x="${wheel_r_x}" y="${wheel_r_y}" z="${wheel_r_z}" />
  <!-- EXTRAS -->
  <xacro:support x="${support_x}" y="${support_y}" z="${support_z}" />
  <!-- SENSORS -->
  <xacro:rplidar x="${rplidar_x}" y="${rplidar_y}" z="${rplidar_z}" />
  <xacro:sensor_d415 parent="base_link" use_nominal_extrinsics="$(arg use_nominal_extrinsics)" add_plug="$(arg add_plug)" use_mesh="$(arg use_mesh)">
    <origin xyz="${rs_cam_x} ${rs_cam_y} ${rs_cam_z}" rpy="0.0 -0.3054326 0.0"/> -0.186779
  </xacro:sensor_d415>
  <xacro:irs />
  <xacro:wt901_imu_sensor x="${imu_x}" y="${imu_y}" z="${imu_z}" />

  <!--gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotNamespace>/${robot}</robotNamespace>
      <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
    </plugin>
  </gazebo-->
  
  <gazebo reference="left_wheel">
    <mu1>1</mu1>
    <mu2>1</mu2>
    <slip1>0.0</slip1>
    <slip2>0.0</slip2>
    <kp>5000000.0</kp>
    <kd>5000000.0</kd>
    <minDepth>0.00</minDepth>
    <maxVel>1000</maxVel>
    <fdir1>1 0 0</fdir1>
    <material>Gazebo/FlatBlack</material>
  </gazebo>
  <gazebo reference="right_wheel">
    <mu1>1</mu1>
    <mu2>1</mu2>
    <slip1>0.0</slip1>
    <slip2>0.0</slip2>
    <kp>5000000.0</kp>
    <kd>5000000.0</kd>
    <minDepth>0.00</minDepth>
    <maxVel>1000</maxVel>
    <fdir1>1 0 0</fdir1>
    <material>Gazebo/FlatBlack</material>
  </gazebo>

  <gazebo reference="caster_wheel">
    <mu1>0.1</mu1>
    <mu2>0.1</mu2>
    <slip1>0.9</slip1>
    <slip2>0.5</slip2>
    <kp>300000.0</kp>
    <kd>300000.0</kd>
    <minDepth>0.0001</minDepth>
    <maxVel>0</maxVel>
    <fdir1>1 0 0</fdir1>
    <material>Gazebo/Red</material>
  </gazebo>
  
  <gazebo>
  	<!--MOTOR CONTROLLER gazebo-->
    <plugin name="base_controller" filename="libgazebo_ros_diff_drive.so">
      <!--robotNamespace>/${robot}</robotNamespace-->
      <updateRate>50</updateRate>
      <alwaysOn>true</alwaysOn>
      <leftJoint>left_wheel_joint</leftJoint>
      <rightJoint>right_wheel_joint</rightJoint>
      <wheelSeparation>0.318</wheelSeparation>
      <wheelDiameter>0.108</wheelDiameter>
      <wheelAcceleration>0.0</wheelAcceleration>
      <wheelTorque>17</wheelTorque>
      <commandTopic>base_controller/cmd_vel</commandTopic>
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <robotBaseFrame>base_footprint</robotBaseFrame>
      <odometrySource>world</odometrySource>
      <publishWheelTF>false</publishWheelTF>
      <publishWheelJointState>true</publishWheelJointState>
      <publishOdomTF>false</publishOdomTF>
      <publishTf>true</publishTf>
      <legacyMode>false</legacyMode>
      <rosDebugLevel>na</rosDebugLevel>
    </plugin>
  </gazebo>
  
  <!--IMU gazebo-->
	<gazebo reference="wt901_imu">
		<gravity>true</gravity>
		<sensor name="imu_sensor" type="imu">
		    <always_on>true</always_on>
		    <update_rate>30</update_rate>
				<visualize>false</visualize>
		    <topic>__default_topic__</topic>
		    <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
				  <topicName>/${robot}/imu/data_raw</topicName>
		      <bodyName>wt901_imu</bodyName>
		      <updateRateHZ>0.0</updateRateHZ>
		      <gaussianNoise>${0.0017*0.0017}</gaussianNoise>
		      <xyzOffset>0 0 0</xyzOffset>
		      <rpyOffset>0 0 0</rpyOffset>
		      <frameName>wt901_imu</frameName>
		    </plugin>
		    <pose>0 0 0 0 0 0</pose>
		  </sensor>
	</gazebo>
	<!--IR Sensors gazebo-->
	<gazebo reference="irs_front_l">
	 <sensor type="ray" name="TeraRangerLeft">
	    <pose>0 0 0 0 0 0</pose>
			<visualize>true</visualize>
			<update_rate>20</update_rate>
			<ray>
			   <scan>
				    <horizontal>
						   <samples>10</samples>
							 <resolution>1</resolution>
							 <min_angle>-0.0698132</min_angle>
							 <max_angle>0.0698132</max_angle>
						</horizontal>
						<vertical>
						   <samples>10</samples>
							 <resolution>1</resolution>
							 <min_angle>-0.0698132</min_angle>
							 <max_angle>0.0698132</max_angle>
						</vertical>
				 </scan>
				 <range>
				    <min>0.04</min>
						<max>0.3</max>
						<resolution>0.02</resolution>
				 </range>
			</ray>
			<plugin filename="libgazebo_ros_range.so" name="gazebo_ros_range">
			   <gaussianNoise>0.005</gaussianNoise>
				 <alwaysOn>true</alwaysOn>
				 <updateRate>20</updateRate>
				 <topicName>irs_front/left</topicName>
				 <frameName>irs_front_l</frameName>
				 <radiation>INFRARED</radiation>
				 <fov>0.2967</fov>
			</plugin>
		</sensor>
	</gazebo>
	<gazebo reference="irs_front_r">
	  <sensor type="ray" name="TeraRangerRight">
		   <pose>0 0 0 0 0 0</pose>
			 <visualize>true</visualize>
			 <update_rate>20</update_rate>
			 <ray>
			    <scan>
					   <horizontal>
						    <samples>10</samples>
								<resolution>1</resolution>
								<min_angle>-0.0698132</min_angle>
								<max_angle>0.0698132</max_angle>
						 </horizontal>
						 <vertical>
						    <samples>10</samples>
								<resolution>1</resolution>
								<min_angle>-0.0698132</min_angle>
								<max_angle>0.0698132</max_angle>
						 </vertical>
					</scan>
					<range>
					   <min>0.04</min>
						 <max>0.3</max>
						 <resolution>0.02</resolution>
					</range>
			 </ray>
			 <plugin filename="libgazebo_ros_range.so" name="gazebo_ros_range">
			    <gaussianNoise>0.005</gaussianNoise>
					<alwaysOn>true</alwaysOn>
					<updateRate>20</updateRate>
					<topicName>irs_front/right</topicName>
					<frameName>irs_front_r</frameName>
					<radiation>INFRARED</radiation>
					<fov>0.2967</fov>
			 </plugin>
		 </sensor>
	</gazebo>
	<gazebo reference="irs_rear">
	  <sensor type="ray" name="TeraRangerRear">
		    <pose>0 0 0 0 0 0</pose>
				<visualize>true</visualize>
				<update_rate>20</update_rate>
				<ray>
				   <scan>
					    <horizontal>
							   <samples>10</samples>
								 <resolution>1</resolution>
								 <min_angle>-0.0698132</min_angle>
								 <max_angle>0.0698132</max_angle>
							</horizontal>
							<vertical>
							   <samples>10</samples>
								 <resolution>1</resolution>
								 <min_angle>-0.0698132</min_angle>
								 <max_angle>0.0698132</max_angle>
							</vertical>
					 </scan>
					 <range>
					    <min>0.04</min>
							<max>0.3</max>
							<resolution>0.02</resolution>
					 </range>
				</ray>
				<plugin filename="libgazebo_ros_range.so" name="gazebo_ros_range">
				   <gaussianNoise>0.005</gaussianNoise>
					 <alwaysOn>true</alwaysOn>
					 <updateRate>20</updateRate>
					 <topicName>irs_rear/center</topicName>
					 <frameName>irs_rear</frameName>
					 <radiation>INFRARED</radiation>
					 <fov>0.2967</fov>
				</plugin>
			</sensor>
	</gazebo>
	<!--RPLIDAR Sensors gazebo-->
	<gazebo reference="rplidar">
	  <sensor type="ray" name="rplidar_sensor">
		  <pose>0 0 0 0 0 0</pose>
			<visualize>false</visualize>
			<update_rate>11.5</update_rate>
			<ray>
			  <scan>
				  <horizontal>
					  <samples>360</samples>
						<resolution>0.9</resolution>
						<min_angle>0.01745334453880787</min_angle>
						<max_angle>6.2831854820251465</max_angle>
					</horizontal>
				</scan>
				<range>
				  <min>0.15000000596046448</min>
					<max>12.0</max>
					<resolution>0.01</resolution>
				</range>
				<noise>
				  <type>gaussian</type>
					<mean>0.0</mean>
					<stddev>0.01</stddev>
				</noise>
			</ray>
			<plugin name="gazebo_rplidar_controller" filename="libgazebo_ros_laser.so">
			  <topicName>/${robot}/scan</topicName>
				<frameName>rplidar</frameName>
			</plugin>
		</sensor>
	</gazebo>
	<!--REALENSE CAMERA Sensor gazebo-->
	<gazebo reference="camera_bottom_screw_frame"> <!-- link name-->
	  <sensor name="d415_camera" type="depth">
		  <update_rate>20.0</update_rate>
			<camera>
			  <horizontal_fov>1.204280</horizontal_fov>
				<image>
				  <width>640</width>
					<height>480</height>
					<format>R8G8B8</format>
				</image>
				<clip>
				  <near>0.05</near>
					<far>3</far>
				</clip>
				<noise>
				  <type>gaussian</type>
					<mean>0.0</mean>
					<stddev>0.0003</stddev>
				</noise>
			</camera>
			<plugin name="d415_camera_controller" filename="libgazebo_ros_openni_kinect.so">
			  <baseline>0.055</baseline>
				<alwaysOn>true</alwaysOn>
				<updateRate>1.0</updateRate>
				<cameraName>${camera_name}_ir</cameraName>
				<imageTopicName>/${robot}/${camera_name}/color/image_raw</imageTopicName>
				<cameraInfoTopicName>/${robot}/${camera_name}/color/camera_info</cameraInfoTopicName>
				<depthImageTopicName>/${robot}/${camera_name}/depth/image_raw</depthImageTopicName>
				<depthImageCameraInfoTopicName>/${robot}/${camera_name}/depth/camera_info</depthImageCameraInfoTopicName>
				<pointCloudTopicName>/${robot}/${camera_name}/depth/points</pointCloudTopicName>
				<frameName>camera_depth_optical_frame</frameName>
				<pointCloudCutoff>0.5</pointCloudCutoff>
				<pointCloudCutoffMax>3.0</pointCloudCutoffMax>
				<distortionK1>0.00000001</distortionK1>
				<distortionK2>0.00000001</distortionK2>
				<distortionK3>0.00000001</distortionK3>
				<distortionT1>0.00000001</distortionT1>
				<distortionT2>0.00000001</distortionT2>
				<CxPrime>0</CxPrime>
				<Cx>0</Cx>
				<Cy>0</Cy>
				<focalLength>465.601485</focalLength> <!-- 0.0 -->
				<hackBaseline>0</hackBaseline>
			</plugin>
		</sensor>
	</gazebo>

</robot>
